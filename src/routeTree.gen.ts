/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './app/__root'
import { Route as DashboardRouteImport } from './app/dashboard/route'
import { Route as AuthRouteImport } from './app/auth/route'
import { Route as IndexImport } from './app/index'
import { Route as DashboardIndexImport } from './app/dashboard/index'
import { Route as DashboardSettingsImport } from './app/dashboard/settings'
import { Route as AuthSigninImport } from './app/auth/signin'
import { Route as AuthRegisterImport } from './app/auth/register'
import { Route as DashboardPresentsRouteImport } from './app/dashboard/presents/route'
import { Route as DashboardListsRouteImport } from './app/dashboard/lists/route'
import { Route as DashboardPresentsIndexImport } from './app/dashboard/presents/index'
import { Route as DashboardListsIndexImport } from './app/dashboard/lists/index'
import { Route as DashboardPresentsCreateImport } from './app/dashboard/presents/create'
import { Route as DashboardListsCreateImport } from './app/dashboard/lists/create'
import { Route as DashboardListsListIdIndexImport } from './app/dashboard/lists/$listId/index'
import { Route as DashboardPresentsPresentIdEditImport } from './app/dashboard/presents/$presentId/edit'
import { Route as DashboardListsListIdEditImport } from './app/dashboard/lists/$listId/edit'
import { Route as publicListListIdPublicImport } from './app/(public)/list/$listId.public'

// Create/Update Routes

const DashboardRouteRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthRouteRoute = AuthRouteImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardSettingsRoute = DashboardSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const AuthSigninRoute = AuthSigninImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRouteRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRouteRoute,
} as any)

const DashboardPresentsRouteRoute = DashboardPresentsRouteImport.update({
  id: '/presents',
  path: '/presents',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardListsRouteRoute = DashboardListsRouteImport.update({
  id: '/lists',
  path: '/lists',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardPresentsIndexRoute = DashboardPresentsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardPresentsRouteRoute,
} as any)

const DashboardListsIndexRoute = DashboardListsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardListsRouteRoute,
} as any)

const DashboardPresentsCreateRoute = DashboardPresentsCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => DashboardPresentsRouteRoute,
} as any)

const DashboardListsCreateRoute = DashboardListsCreateImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => DashboardListsRouteRoute,
} as any)

const DashboardListsListIdIndexRoute = DashboardListsListIdIndexImport.update({
  id: '/$listId/',
  path: '/$listId/',
  getParentRoute: () => DashboardListsRouteRoute,
} as any)

const DashboardPresentsPresentIdEditRoute =
  DashboardPresentsPresentIdEditImport.update({
    id: '/$presentId/edit',
    path: '/$presentId/edit',
    getParentRoute: () => DashboardPresentsRouteRoute,
  } as any)

const DashboardListsListIdEditRoute = DashboardListsListIdEditImport.update({
  id: '/$listId/edit',
  path: '/$listId/edit',
  getParentRoute: () => DashboardListsRouteRoute,
} as any)

const publicListListIdPublicRoute = publicListListIdPublicImport.update({
  id: '/(public)/list/$listId/public',
  path: '/list/$listId/public',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/lists': {
      id: '/dashboard/lists'
      path: '/lists'
      fullPath: '/dashboard/lists'
      preLoaderRoute: typeof DashboardListsRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/presents': {
      id: '/dashboard/presents'
      path: '/presents'
      fullPath: '/dashboard/presents'
      preLoaderRoute: typeof DashboardPresentsRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthRouteImport
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninImport
      parentRoute: typeof AuthRouteImport
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/lists/create': {
      id: '/dashboard/lists/create'
      path: '/create'
      fullPath: '/dashboard/lists/create'
      preLoaderRoute: typeof DashboardListsCreateImport
      parentRoute: typeof DashboardListsRouteImport
    }
    '/dashboard/presents/create': {
      id: '/dashboard/presents/create'
      path: '/create'
      fullPath: '/dashboard/presents/create'
      preLoaderRoute: typeof DashboardPresentsCreateImport
      parentRoute: typeof DashboardPresentsRouteImport
    }
    '/dashboard/lists/': {
      id: '/dashboard/lists/'
      path: '/'
      fullPath: '/dashboard/lists/'
      preLoaderRoute: typeof DashboardListsIndexImport
      parentRoute: typeof DashboardListsRouteImport
    }
    '/dashboard/presents/': {
      id: '/dashboard/presents/'
      path: '/'
      fullPath: '/dashboard/presents/'
      preLoaderRoute: typeof DashboardPresentsIndexImport
      parentRoute: typeof DashboardPresentsRouteImport
    }
    '/(public)/list/$listId/public': {
      id: '/(public)/list/$listId/public'
      path: '/list/$listId/public'
      fullPath: '/list/$listId/public'
      preLoaderRoute: typeof publicListListIdPublicImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/lists/$listId/edit': {
      id: '/dashboard/lists/$listId/edit'
      path: '/$listId/edit'
      fullPath: '/dashboard/lists/$listId/edit'
      preLoaderRoute: typeof DashboardListsListIdEditImport
      parentRoute: typeof DashboardListsRouteImport
    }
    '/dashboard/presents/$presentId/edit': {
      id: '/dashboard/presents/$presentId/edit'
      path: '/$presentId/edit'
      fullPath: '/dashboard/presents/$presentId/edit'
      preLoaderRoute: typeof DashboardPresentsPresentIdEditImport
      parentRoute: typeof DashboardPresentsRouteImport
    }
    '/dashboard/lists/$listId/': {
      id: '/dashboard/lists/$listId/'
      path: '/$listId'
      fullPath: '/dashboard/lists/$listId'
      preLoaderRoute: typeof DashboardListsListIdIndexImport
      parentRoute: typeof DashboardListsRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteRouteChildren {
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthSigninRoute: typeof AuthSigninRoute
}

const AuthRouteRouteChildren: AuthRouteRouteChildren = {
  AuthRegisterRoute: AuthRegisterRoute,
  AuthSigninRoute: AuthSigninRoute,
}

const AuthRouteRouteWithChildren = AuthRouteRoute._addFileChildren(
  AuthRouteRouteChildren,
)

interface DashboardListsRouteRouteChildren {
  DashboardListsCreateRoute: typeof DashboardListsCreateRoute
  DashboardListsIndexRoute: typeof DashboardListsIndexRoute
  DashboardListsListIdEditRoute: typeof DashboardListsListIdEditRoute
  DashboardListsListIdIndexRoute: typeof DashboardListsListIdIndexRoute
}

const DashboardListsRouteRouteChildren: DashboardListsRouteRouteChildren = {
  DashboardListsCreateRoute: DashboardListsCreateRoute,
  DashboardListsIndexRoute: DashboardListsIndexRoute,
  DashboardListsListIdEditRoute: DashboardListsListIdEditRoute,
  DashboardListsListIdIndexRoute: DashboardListsListIdIndexRoute,
}

const DashboardListsRouteRouteWithChildren =
  DashboardListsRouteRoute._addFileChildren(DashboardListsRouteRouteChildren)

interface DashboardPresentsRouteRouteChildren {
  DashboardPresentsCreateRoute: typeof DashboardPresentsCreateRoute
  DashboardPresentsIndexRoute: typeof DashboardPresentsIndexRoute
  DashboardPresentsPresentIdEditRoute: typeof DashboardPresentsPresentIdEditRoute
}

const DashboardPresentsRouteRouteChildren: DashboardPresentsRouteRouteChildren =
  {
    DashboardPresentsCreateRoute: DashboardPresentsCreateRoute,
    DashboardPresentsIndexRoute: DashboardPresentsIndexRoute,
    DashboardPresentsPresentIdEditRoute: DashboardPresentsPresentIdEditRoute,
  }

const DashboardPresentsRouteRouteWithChildren =
  DashboardPresentsRouteRoute._addFileChildren(
    DashboardPresentsRouteRouteChildren,
  )

interface DashboardRouteRouteChildren {
  DashboardListsRouteRoute: typeof DashboardListsRouteRouteWithChildren
  DashboardPresentsRouteRoute: typeof DashboardPresentsRouteRouteWithChildren
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardListsRouteRoute: DashboardListsRouteRouteWithChildren,
  DashboardPresentsRouteRoute: DashboardPresentsRouteRouteWithChildren,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/lists': typeof DashboardListsRouteRouteWithChildren
  '/dashboard/presents': typeof DashboardPresentsRouteRouteWithChildren
  '/auth/register': typeof AuthRegisterRoute
  '/auth/signin': typeof AuthSigninRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/lists/create': typeof DashboardListsCreateRoute
  '/dashboard/presents/create': typeof DashboardPresentsCreateRoute
  '/dashboard/lists/': typeof DashboardListsIndexRoute
  '/dashboard/presents/': typeof DashboardPresentsIndexRoute
  '/list/$listId/public': typeof publicListListIdPublicRoute
  '/dashboard/lists/$listId/edit': typeof DashboardListsListIdEditRoute
  '/dashboard/presents/$presentId/edit': typeof DashboardPresentsPresentIdEditRoute
  '/dashboard/lists/$listId': typeof DashboardListsListIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/auth/register': typeof AuthRegisterRoute
  '/auth/signin': typeof AuthSigninRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/lists/create': typeof DashboardListsCreateRoute
  '/dashboard/presents/create': typeof DashboardPresentsCreateRoute
  '/dashboard/lists': typeof DashboardListsIndexRoute
  '/dashboard/presents': typeof DashboardPresentsIndexRoute
  '/list/$listId/public': typeof publicListListIdPublicRoute
  '/dashboard/lists/$listId/edit': typeof DashboardListsListIdEditRoute
  '/dashboard/presents/$presentId/edit': typeof DashboardPresentsPresentIdEditRoute
  '/dashboard/lists/$listId': typeof DashboardListsListIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/auth': typeof AuthRouteRouteWithChildren
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/dashboard/lists': typeof DashboardListsRouteRouteWithChildren
  '/dashboard/presents': typeof DashboardPresentsRouteRouteWithChildren
  '/auth/register': typeof AuthRegisterRoute
  '/auth/signin': typeof AuthSigninRoute
  '/dashboard/settings': typeof DashboardSettingsRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/lists/create': typeof DashboardListsCreateRoute
  '/dashboard/presents/create': typeof DashboardPresentsCreateRoute
  '/dashboard/lists/': typeof DashboardListsIndexRoute
  '/dashboard/presents/': typeof DashboardPresentsIndexRoute
  '/(public)/list/$listId/public': typeof publicListListIdPublicRoute
  '/dashboard/lists/$listId/edit': typeof DashboardListsListIdEditRoute
  '/dashboard/presents/$presentId/edit': typeof DashboardPresentsPresentIdEditRoute
  '/dashboard/lists/$listId/': typeof DashboardListsListIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/auth'
    | '/dashboard'
    | '/dashboard/lists'
    | '/dashboard/presents'
    | '/auth/register'
    | '/auth/signin'
    | '/dashboard/settings'
    | '/dashboard/'
    | '/dashboard/lists/create'
    | '/dashboard/presents/create'
    | '/dashboard/lists/'
    | '/dashboard/presents/'
    | '/list/$listId/public'
    | '/dashboard/lists/$listId/edit'
    | '/dashboard/presents/$presentId/edit'
    | '/dashboard/lists/$listId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/auth'
    | '/auth/register'
    | '/auth/signin'
    | '/dashboard/settings'
    | '/dashboard'
    | '/dashboard/lists/create'
    | '/dashboard/presents/create'
    | '/dashboard/lists'
    | '/dashboard/presents'
    | '/list/$listId/public'
    | '/dashboard/lists/$listId/edit'
    | '/dashboard/presents/$presentId/edit'
    | '/dashboard/lists/$listId'
  id:
    | '__root__'
    | '/'
    | '/auth'
    | '/dashboard'
    | '/dashboard/lists'
    | '/dashboard/presents'
    | '/auth/register'
    | '/auth/signin'
    | '/dashboard/settings'
    | '/dashboard/'
    | '/dashboard/lists/create'
    | '/dashboard/presents/create'
    | '/dashboard/lists/'
    | '/dashboard/presents/'
    | '/(public)/list/$listId/public'
    | '/dashboard/lists/$listId/edit'
    | '/dashboard/presents/$presentId/edit'
    | '/dashboard/lists/$listId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRouteRoute: typeof AuthRouteRouteWithChildren
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  publicListListIdPublicRoute: typeof publicListListIdPublicRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRouteRoute: AuthRouteRouteWithChildren,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  publicListListIdPublicRoute: publicListListIdPublicRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/dashboard",
        "/(public)/list/$listId/public"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/auth": {
      "filePath": "auth/route.tsx",
      "children": [
        "/auth/register",
        "/auth/signin"
      ]
    },
    "/dashboard": {
      "filePath": "dashboard/route.tsx",
      "children": [
        "/dashboard/lists",
        "/dashboard/presents",
        "/dashboard/settings",
        "/dashboard/"
      ]
    },
    "/dashboard/lists": {
      "filePath": "dashboard/lists/route.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/lists/create",
        "/dashboard/lists/",
        "/dashboard/lists/$listId/edit",
        "/dashboard/lists/$listId/"
      ]
    },
    "/dashboard/presents": {
      "filePath": "dashboard/presents/route.tsx",
      "parent": "/dashboard",
      "children": [
        "/dashboard/presents/create",
        "/dashboard/presents/",
        "/dashboard/presents/$presentId/edit"
      ]
    },
    "/auth/register": {
      "filePath": "auth/register.tsx",
      "parent": "/auth"
    },
    "/auth/signin": {
      "filePath": "auth/signin.tsx",
      "parent": "/auth"
    },
    "/dashboard/settings": {
      "filePath": "dashboard/settings.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx",
      "parent": "/dashboard"
    },
    "/dashboard/lists/create": {
      "filePath": "dashboard/lists/create.tsx",
      "parent": "/dashboard/lists"
    },
    "/dashboard/presents/create": {
      "filePath": "dashboard/presents/create.tsx",
      "parent": "/dashboard/presents"
    },
    "/dashboard/lists/": {
      "filePath": "dashboard/lists/index.tsx",
      "parent": "/dashboard/lists"
    },
    "/dashboard/presents/": {
      "filePath": "dashboard/presents/index.tsx",
      "parent": "/dashboard/presents"
    },
    "/(public)/list/$listId/public": {
      "filePath": "(public)/list/$listId.public.tsx"
    },
    "/dashboard/lists/$listId/edit": {
      "filePath": "dashboard/lists/$listId/edit.tsx",
      "parent": "/dashboard/lists"
    },
    "/dashboard/presents/$presentId/edit": {
      "filePath": "dashboard/presents/$presentId/edit.tsx",
      "parent": "/dashboard/presents"
    },
    "/dashboard/lists/$listId/": {
      "filePath": "dashboard/lists/$listId/index.tsx",
      "parent": "/dashboard/lists"
    }
  }
}
ROUTE_MANIFEST_END */
